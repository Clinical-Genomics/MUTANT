// Select multiple profiles by using -profile local, singularity

profiles {
  local {
    params.location='local'
    process.executor='local'
  }
  slurm {
    params.location='slurm'
    process.executor='slurm'
    process.queue='high'
  }
  conda {
    params.pkm = 'conda'

    params.rootdir = '/tmp/jasen/'
    params.outdir = "${params.rootdir}/results/"
    params.assets =  "${params.rootdir}/assets/"
    params.reference = "${params.assets}/test_data/references/AP017922.1.fasta"
    params.krakendb="${params.assets}/references/minikraken2/"
    params.aribadb="${params.assets}/references/ariba/"
    params.chewbbacadb="${params.assets}/references/chewbbaca/"
  }
  singularity {
    params.pkm = 'singularity'

    params.rootdir ="/out/"
    params.work =  "${params.rootdir}/scratch/"

    env.NXF_WORK="${params.work}"
    env.NXF_TEMP="${params.work}"
    env.NXF_SINGULARITY_LOCALCACHEDIR="${params.work}"
    env.NXF_SINGULARITY_CACHEDIR="${params.work}"
    env.NXF_SINGULARITY_TMPDIR="${params.work}"

    env.SINGULARITY_LOCALCACHEDIR="${params.work}"
    env.SINGULARITY_CACHEDIR="${params.work}"
    env.SINGULARITY_TMPDIR="${params.work}"
    env.SINGULARITY_ROOTFS="${params.work}"

    env.TMPDIR="${params.work}"
    env.TEMPDIR="${params.work}"


    params.outdir = "${params.rootdir}/results/"
    params.assets =  "${params.rootdir}/assets/"
    params.reference = "${params.assets}/test_data/references/AP017922.1.fasta"
    params.krakendb="${params.assets}/references/minikraken2/"
    params.aribadb="${params.assets}/references/ariba/"
    params.chewbbacadb="${params.assets}/references/chewbbaca/"

    singularity.enabled = true
    singularity.runOptions = "-B ${baseDir}:/external -B /scratch/tmp/:/out -e  -W ${params.work} --pwd ${params.work} --env-file /JASEN/container/environment.yml"
    singularity.autoMounts = true

  }
}

params {
  krakendb_url="ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/16S_Silva138_20200326.tgz"
  chewbbacadb_url="https://www.cgmlst.org/ncs/schema/3887469/alleles/"

  ariba_db_download = true
  chewbbaca_db_download = true
  kraken_db_download = true

  input = "${baseDir}/assets/test_data/sequencing_data/saureus_100k" 
  adapters = "${baseDir}/assets/test_data/adapters/NexteraPE-PE.fa"
  prodigal_file="${baseDir}/assets/prodigal_training_files/Enterococcus_faecium.trn"

}

process {
  withLable: min_allocation {
    cpus = 1
    memory = '2.GB'
    time = '15m'
  }
  withLabel: modest_allocation {
    cpus = 1 
    memory = '4.GB'
    time = '1h'
  }
  withLabel: max_allocation {
    cpus = 1
    memory = '6.GB'
    time = '2h'
  }
}

manifest {
  name = 'genomic-medicine-sweden/JASEN'
  author = 'Isak Sylvin et al.'
  homePage = 'https://github.com/genomic-medicine-sweden/JASEN.git'
  description = 'Json producing Assembly driven microbial Sequence analysis pipeline to support Epitypification and Normalize classification decisions'
  mainScript = 'main.nf'
  nextflowVersion = '>=10.0.0'
  version = '0.1.0'
}
